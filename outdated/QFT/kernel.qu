import config.json.*
import operations.*
import util.*

operation qft(): bool[] {
    bool[4] output;
    using(q : qubit[4]) {
        init_all(q);
        X(q[0]);
        X(q[2]);
        H(q[0]);
        Z45(q[1]);
        CNOT(q[1], q[0]);
        Zm45(q[0]);
        CNOT(q[1], q[0]);
        Z45(q[0]);
        H(q[1]);
        Z22_5(q[2]);
        CNOT(q[2], q[0]);
        Zm22_5(q[0]);
        CNOT(q[2], q[0]);
        Z22_5(q[0]);
        Z45(q[2]);
        CNOT(q[2], q[1]);
        Zm45(q[1]);
        CNOT(q[2], q[1]);
        Z45(q[1]);
        H(q[2]);
        Z11_25(q[3]);
        CNOT(q[3], q[0]);
        Zm11_25(q[0]);
        CNOT(q[3], q[0]);
        Z11_25(q[0]);
        Z22_5(q[3]);
        CNOT(q[3], q[1]);
        Zm22_5(q[1]);
        CNOT(q[3], q[1]);
        Z22_5(q[1]);
        Z45(q[3]);
        CNOT(q[3], q[2]);
        Zm45(q[2]);
        CNOT(q[3], q[2]);
        Z45(q[2]);
        H(q[3]);
        output = meas_all(q);
    }
    return output;
}
